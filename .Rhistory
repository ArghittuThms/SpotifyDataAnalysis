7 : as.character("Fa#", na.rm = TRUE),
8 : as.character("Sol", na.rm = TRUE),
9 : as.character("Sol#", na.rm = TRUE),
10 : as.character("La", na.rm = TRUE),
11 : as.character("La#", na.rm = TRUE),
12 : as.character("Si", na.rm = TRUE)
)
}))
top_200_song <- top_200_song %>%
mutate(key_name = map(key, function(x){
switch (x,
is.na : NULL,
is.nan : NULL,
1 : as.character("DO", na.rm = TRUE),
2 : as.character("Do#", na.rm = TRUE),
3 : as.character("Re", na.rm = TRUE),
4 : as.character("Re#", na.rm = TRUE),
5 : as.character("Mi", na.rm = TRUE),
6 : as.character("Fa", na.rm = TRUE),
7 : as.character("Fa#", na.rm = TRUE),
8 : as.character("Sol", na.rm = TRUE),
9 : as.character("Sol#", na.rm = TRUE),
10 : as.character("La", na.rm = TRUE),
11 : as.character("La#", na.rm = TRUE),
12 : as.character("Si", na.rm = TRUE)
)
}))
top_200_song <- top_200_song %>%
mutate(key_name = map(key, function(x){
switch (x,
is.na : NULL,
is.nan : NULL,
-1 : as.character("NS", na.rm = TRUE),
1 : as.character("DO", na.rm = TRUE),
2 : as.character("Do#", na.rm = TRUE),
3 : as.character("Re", na.rm = TRUE),
4 : as.character("Re#", na.rm = TRUE),
5 : as.character("Mi", na.rm = TRUE),
6 : as.character("Fa", na.rm = TRUE),
7 : as.character("Fa#", na.rm = TRUE),
8 : as.character("Sol", na.rm = TRUE),
9 : as.character("Sol#", na.rm = TRUE),
10 : as.character("La", na.rm = TRUE),
11 : as.character("La#", na.rm = TRUE),
12 : as.character("Si", na.rm = TRUE)
)
}))
ggplot(data = top_200_song, mapping = aes(x = key)) +
geom_density(aes(color = genre)) +
labs(title = 'Key of most popularity song',x = '', y = '') +
theme_bw() +
theme(axis.text.x = element_text(angle = 50, hjust = 1),axis.text.y = element_blank()) +
axis(labels = c("Do", "DO#", "Re", "Re#", "Mi", "Fa", "Fa#", "Sol", "Sol#", "La", "La#", "Si"))
ggplot(data = top_200_song, mapping = aes(x = key)) +
geom_density(aes(color = genre)) +
labs(title = 'Key of most popularity song',x = '', y = '') +
theme_bw() +
theme(axis.text.x = element_text(angle = 50, hjust = 1),axis.text.y = element_blank()) +
scale_x_discrete(breaks = 1:12, labels=c("Do", "DO#", "Re", "Re#", "Mi", "Fa", "Fa#", "Sol", "Sol#", "La", "La#", "Si"))
ggplot(data = top_200_song, mapping = aes(x = key)) +
geom_density(aes(color = genre)) +
labs(title = 'Key of most popularity song',x = '', y = '') +
theme_bw() +
theme(axis.text.x = element_text(angle = 50, hjust = 1),axis.text.y = element_blank()) +
scale_x_discrete(breaks = 1:12, labels = c("Do", "DO#", "Re", "Re#", "Mi", "Fa", "Fa#", "Sol", "Sol#", "La", "La#", "Si"))+
xlab(NULL)
ggplot(data = top_200_song, mapping = aes(x = key)) +
geom_density(aes(color = genre)) +
labs(title = 'Key of most popularity song',x = '', y = '') +
theme_bw() +
scale_x_discrete(breaks = 1:12, labels = c("Do", "DO#", "Re", "Re#", "Mi", "Fa", "Fa#", "Sol", "Sol#", "La", "La#", "Si")) +
theme(axis.text.x = element_text(angle = 50, hjust = 1),axis.text.y = element_blank()) +
xlab(NULL)
ggplot(data = top_200_song, mapping = aes(x = key)) +
geom_density(aes(color = genre)) +
labs(title = 'Key of most popularity song',x = '', y = '') +
theme_bw() +
scale_x_discrete(breaks = 0:11, labels = c("Do", "DO#", "Re", "Re#", "Mi", "Fa", "Fa#", "Sol", "Sol#", "La", "La#", "Si")) +
theme(axis.text.x = element_text(angle = 50, hjust = 1),axis.text.y = element_blank()) +
xlab(NULL)
# Grafico
ggplot(data = top_200_song, mapping = aes(x = key)) +
geom_density(aes(color = genre)) +
labs(title = 'Key of most popularity song',x = '', y = '') +
theme_bw() +
scale_x_discrete(breaks = 1:12, labels = c("Do", "DO#", "Re", "Re#", "Mi", "Fa", "Fa#", "Sol", "Sol#", "La", "La#", "Si")) +
theme(axis.text.x = element_text(angle = 50, hjust = 1),axis.text.y = element_blank()) +
xlab(NULL)
ggplot(data = top_200_song, mapping = aes(x = key)) +
geom_density(aes(color = genre)) +
labs(title = 'Key of most popularity song',x = '', y = '') +
theme_bw() +
scale_x_discrete(break = 1:12, labels = letters[1:12])
theme(axis.text.x = element_text(angle = 50, hjust = 1),axis.text.y = element_blank())
ggplot(data = top_200_song, mapping = aes(x = key)) +
geom_density(aes(color = genre)) +
labs(title = 'Key of most popularity song',x = '', y = '') +
theme_bw() +
scale_x_discrete(break = 1:12, labels = letters[1:12]) +
theme(axis.text.x = element_text(angle = 50, hjust = 1),axis.text.y = element_blank())
ggplot(data = top_200_song, mapping = aes(x = key)) +
geom_density(aes(color = genre)) +
labs(title = 'Key of most popularity song',x = '', y = '') +
theme_bw() +
scale_x_discrete(breaks = 1:12, labels = letters[1:12]) +
theme(axis.text.x = element_text(angle = 50, hjust = 1),axis.text.y = element_blank())
# Grafico
ggplot(data = top_200_song, mapping = aes(x = key)) +
geom_density(aes(color = genre)) +
labs(title = 'Key of most popularity song',x = '', y = '') +
theme_bw() +
scale_x_discrete(breaks = 1:14, labels = letters[1:14]) +
theme(axis.text.x = element_text(angle = 50, hjust = 1),axis.text.y = element_blank())
ggplot(data = top_200_song, mapping = aes(x = key)) +
geom_bar(aes(color = genre)) +
labs(title = 'Key of most popularity song',x = '', y = '') +
theme_bw() +
scale_x_discrete(breaks = 1:14, labels = letters[1:14]) +
theme(axis.text.x = element_text(angle = 50, hjust = 1),axis.text.y = element_blank())
ggplot(data = top_200_song, mapping = aes(x = key)) +
geom_bar(aes(color = genre), position="dodge",) +
labs(title = 'Key of most popularity song',x = '', y = '') +
theme_bw() +
scale_x_discrete(breaks = 1:14, labels = letters[1:14]) +
theme(axis.text.x = element_text(angle = 50, hjust = 1),axis.text.y = element_blank())
ggplot(data = top_200_song, mapping = aes(x = key)) +
geom_bar(aes(color = genre), position="dodge", stat = "identity") +
labs(title = 'Key of most popularity song',x = '', y = '') +
theme_bw() +
scale_x_discrete(breaks = 1:14, labels = letters[1:14]) +
theme(axis.text.x = element_text(angle = 50, hjust = 1),axis.text.y = element_blank())
# Grafico
ggplot(data = top_200_song, mapping = aes(x = key)) +
geom_density() +
geom_bar(aes(color = genre), position="dodge", stat = "identity") +
labs(title = 'Key of most popularity song',x = '', y = '') +
theme_bw() +
scale_x_discrete(breaks = 1:14, labels = letters[1:14]) +
theme(axis.text.x = element_text(angle = 50, hjust = 1),axis.text.y = element_blank())
ggplot(data = top_200_song, mapping = aes(x = key)) +
geom_bar(aes(color = genre), position="dodge") +
labs(title = 'Key of most popularity song',x = '', y = '') +
theme_bw() +
scale_x_discrete(breaks = 1:14, labels = letters[1:14]) +
theme(axis.text.x = element_text(angle = 50, hjust = 1),axis.text.y = element_blank())
# Grafico
ggplot(data = top_200_song, mapping = aes(x = key, fill = genre)) +
geom_bar(aes(color = genre), position="dodge") +
labs(title = 'Key of most popularity song',x = '', y = '') +
theme_bw() +
scale_x_discrete(breaks = 1:14, labels = letters[1:14]) +
theme(axis.text.x = element_text(angle = 50, hjust = 1),axis.text.y = element_blank())
# Grafico
ggplot(data = top_200_song, mapping = aes(x = key, fill = genre)) +
geom_bar(aes(color = genre), position="dodge", stat = "identity") +
labs(title = 'Key of most popularity song',x = '', y = '') +
theme_bw() +
scale_x_discrete(breaks = 1:14, labels = letters[1:14]) +
theme(axis.text.x = element_text(angle = 50, hjust = 1),axis.text.y = element_blank())
ggplot(data = top_200_song, mapping = aes(x = key, fill = genre)) +
geom_bar(aes(color = genre), position="dodge") +
labs(title = 'Key of most popularity song',x = '', y = '') +
theme_bw() +
scale_x_discrete(breaks = 1:14, labels = letters[1:14]) +
theme(axis.text.x = element_text(angle = 50, hjust = 1),axis.text.y = element_blank())
ggplot(data = top_200_song, mapping = aes(x = key, fill = genre)) +
geom_bar(aes(color = genre), position="dodge") +
labs(title = 'Key of most popularity song',x = '', y = '') +
theme_bw() +
scale_x_discrete(breaks = 1:14, labels = letters[1:14])
ggplot(data = top_200_song, mapping = aes(x = key, fill = genre)) +
geom_bar(aes(color = genre), position="dodge") +
labs(title = 'Key of most popularity song',x = '', y = '') +
theme_bw() +
scale_x_discrete(breaks = 1:14, labels = letters[1:14]) +
theme(axis.text.x = element_text(angle = 50, hjust = 1), axis.text.y = element_blank())
ggplot(data = top_200_song, mapping = aes(x = key, fill = genre)) +
geom_bar(aes(color = genre), position="dodge") +
labs(title = 'Key of most popularity song',x = '', y = '') +
theme_bw() +
scale_x_discrete(breaks = 1:14, labels = numbers[1:14]) +
theme(axis.text.x = element_text(angle = 50, hjust = 1), axis.text.y = element_blank())
ggplot(data = top_200_song, mapping = aes(x = key, fill = genre)) +
geom_bar(aes(color = genre), position="dodge") +
labs(title = 'Key of most popularity song',x = '', y = '') +
theme_bw() +
scale_x_continuous(breaks = 1:14, labels = numbers[1:14]) +
theme(axis.text.x = element_text(angle = 50, hjust = 1), axis.text.y = element_blank())
# Grafico
ggplot(data = top_200_song, mapping = aes(x = key, fill = genre)) +
geom_bar(aes(color = genre), position="dodge") +
labs(title = 'Key of most popularity song',x = '', y = '') +
theme_bw() +
scale_x_continuous(breaks = 1:14, labels = letters[1:14]) +
theme(axis.text.x = element_text(angle = 50, hjust = 1), axis.text.y = element_blank())
ggplot(data = top_200_song, mapping = aes(x = key, fill = genre)) +
geom_bar(aes(color = genre), position="dodge") +
labs(title = 'Key of most popularity song',x = '', y = '') +
theme_bw() +
scale_x_continuous(breaks = 1:14, labels = c("Do", "DO#", "Re", "Re#", "Mi", "Fa", "Fa#", "Sol", "Sol#", "La", "La#", "Si")) +
theme(axis.text.x = element_text(angle = 50, hjust = 1), axis.text.y = element_blank())
ggplot(data = top_200_song, mapping = aes(x = key, fill = genre)) +
geom_bar(aes(color = genre), position="dodge") +
labs(title = 'Key of most popularity song',x = '', y = '') +
theme_bw() +
scale_x_continuous(breaks = 1:12, labels = c("Do", "DO#", "Re", "Re#", "Mi", "Fa", "Fa#", "Sol", "Sol#", "La", "La#", "Si")) +
theme(axis.text.x = element_text(angle = 50, hjust = 1), axis.text.y = element_blank())
ggplot(data = top_200_song, mapping = aes(x = key, fill = genre)) +
geom_bar(aes(color = genre), position="dodge") +
labs(title = 'Key of most popularity song',x = '', y = '') +
theme_bw() +
scale_x_continuous(breaks = 0:11, labels = c("Do", "DO#", "Re", "Re#", "Mi", "Fa", "Fa#", "Sol", "Sol#", "La", "La#", "Si")) +
theme(axis.text.x = element_text(angle = 50, hjust = 1), axis.text.y = element_blank())
ggplot(data = top_200_song, mapping = aes(x = key, fill = genre)) +
geom_bar(aes(color = genre), position="dodge") +
labs(title = 'Key of most popularity song',x = '', y = '') +
theme_bw() +
scale_x_continuous(breaks = 0:11, labels = c("Do", "DO #", "Re", "Re #", "Mi", "Fa", "Fa #", "Sol", "Sol #", "La", "La #", "Si")) +
theme(axis.text.x = element_text(angle = 50, hjust = 1), axis.text.y = element_blank())
ggplot(data = top_200_song, mapping = aes(x = key, fill = genre)) +
geom_density(aes(color = genre)) +
labs(title = 'Key of most popularity song',x = '', y = '') +
theme_bw() +
scale_x_continuous(breaks = 0:11, labels = c("Do", "DO #", "Re", "Re #", "Mi", "Fa", "Fa #", "Sol", "Sol #", "La", "La #", "Si")) +
theme(axis.text.x = element_text(angle = 50, hjust = 1), axis.text.y = element_blank())
ggplot(data = top_200_song, mapping = aes(x = key)) +
geom_density(aes(color = genre)) +
labs(title = 'Key of most popularity song',x = '', y = '') +
theme_bw() +
scale_x_continuous(breaks = 0:11, labels = c("Do", "DO #", "Re", "Re #", "Mi", "Fa", "Fa #", "Sol", "Sol #", "La", "La #", "Si")) +
theme(axis.text.x = element_text(angle = 50, hjust = 1), axis.text.y = element_blank())
ggplot(data = top_200_song, mapping = aes(x = key, fill = genre)) +
geom_bar(aes(color = genre), position="dodge") +
labs(title = 'Key of most popularity song',x = '', y = '') +
theme_bw() +
scale_x_continuous(breaks = 0:11, labels = c("C", "C #", "D", "D #", "E", "F", "F #", "G", "G #", "A", "A #", "B")) +
theme(axis.text.x = element_text(angle = 50, hjust = 1), axis.text.y = element_blank())
ggplot(data = top_200_song, mapping = aes(x = key)) +
geom_density(aes(color = genre)) +
labs(title = 'Key of most popularity song',x = '', y = '') +
theme_bw() +
scale_x_continuous(breaks = 0:11, labels = c("C", "C #", "D", "D #", "E", "F", "F #", "G", "G #", "A", "A #", "B")) +
theme(axis.text.x = element_text(angle = 50, hjust = 1), axis.text.y = element_blank())
ggplot(data = top_200_song, mapping = aes(x = key, fill = genre)) +
geom_bar(aes(color = genre), position="dodge") +
geom_bar(mapping = aes(x = mode, color = genre)) +
labs(title = 'Key of most popularity song',x = '', y = '') +
theme_bw() +
scale_x_continuous(breaks = 0:11, labels = c("C", "C #", "D", "D #", "E", "F", "F #", "G", "G #", "A", "A #", "B")) +
theme(axis.text.x = element_text(angle = 50, hjust = 1), axis.text.y = element_blank())
ggplot(data = top_200_song, mapping = aes(x = key, fill = genre)) +
geom_bar(aes(color = genre), position="dodge") +
geom_bar(mapping = aes(x = mode, color = mode)) +
labs(title = 'Key of most popularity song',x = '', y = '') +
theme_bw() +
scale_x_continuous(breaks = 0:11, labels = c("C", "C #", "D", "D #", "E", "F", "F #", "G", "G #", "A", "A #", "B")) +
theme(axis.text.x = element_text(angle = 50, hjust = 1), axis.text.y = element_blank())
ggplot(data = top_200_song, mapping = aes(x = key, fill = genre)) +
geom_bar(aes(color = genre), position="dodge") +
labs(title = 'Key of most popularity song',x = '', y = '') +
theme_bw() +
scale_x_continuous(breaks = 0:11, labels = c("C", "C #", "D", "D #", "E", "F", "F #", "G", "G #", "A", "A #", "B")) +
theme(axis.text.x = element_text(angle = 50, hjust = 1), axis.text.y = element_blank())
audio_features %>%
count(genre) %>%
ggplot() +
geom_col(aes(x = genre, y = n, fill = genre)) +
coord_polar() +
theme_bw() +
theme(axis.text.x = element_text(hjust = 1), axis.text.y = element_text(hjust = 1)) +
ggtitle("Genre of most popular song") +
xlab("Song Genre") +
ylab("Number of songs")
View(all_genre_top_artist)
View(all_genre_top_artist)
View(all_genre_top_artist[[8]][[1834]])
View(all_genre_top_artist[[8]][[1833]])
View(all_genre_top_artist[[8]][[1832]])
top_200_song <- audio_features %>%
select(popularity, danceability, energy, key, loudness, mode, speechiness,acousticness,
instrumentalness, liveness, valence, tempo, duration_s) %>%
arrange(desc(popularity)) %>%
head(200)
top_200_song %>%
count(genre) %>%
ggplot() +
geom_col(aes(x = genre, y = n, fill = genre)) +
coord_polar() +
theme_bw() +
theme(axis.text.x = element_text(hjust = 1), axis.text.y = element_text(hjust = 1)) +
ggtitle("Genre of most popular song") +
xlab("Song Genre") +
ylab("Number of songs")
temp3 <- names(top_200_song)[c(3,4,6,8:13)]
top_200_analysis <- top_200_song %>%
select(c("genre", temp3)) %>%
pivot_longer(cols = temp3)
# Grafico che mostra le caratteristiche delle canzoni più popolari
top_200_analysis %>%
ggplot(aes(x = name, y = value)) +
geom_jitter(aes(color = genre)) +
facet_wrap(~name, ncol = 3, scales = 'free') +
labs(title = 'Audio Feature Pattern Frequency Plots', x = '', y = '') +
theme_bw()+
theme(axis.text.y = element_blank(), axis.text.x = element_blank())
top_200_analysis %>%
ggplot(aes(x = name, y = value)) +
geom_jitter(aes(color = genre)) +
facet_wrap(~name, ncol = 3, scales = 'free') +
labs(title = 'Audio Feature Pattern Frequency Plots', x = '', y = '') +
theme_bw()
top_200_analysis %>%
ggplot(aes(x = name, y = value)) +
geom_jitter(aes(color = genre)) +
facet_wrap(~name, ncol = 3, scales = 'free') +
labs(title = 'Audio Feature Pattern Frequency Plots', x = '', y = '') +
theme_bw()+
theme(axis.text.y = element_blank(), axis.text.x = element_blank())
genre_analysis %>%
ggplot(aes(x = value)) +
geom_density(aes(color = genre)) +
facet_wrap(~name, ncol = 3, scales = 'free') +
labs(title = 'Songs characteristics',x = '', y = '') +
theme_bw() +
theme(axis.text.x = element_text(angle = 50, hjust = 1),axis.text.y = element_blank(), aspect.ratio = 0.30)
View(genre_analysis)
View(audio_features)
temp <- names(audio_features)[c(5, 5, 8, 10:15)]
genre_analysis <- audio_features %>%
select(c("genre", temp)) %>%
pivot_longer(cols = temp, values_transform = as.numeric)
# Creazione grafico
genre_analysis %>%
ggplot(aes(x = value)) +
geom_density(aes(color = genre)) +
facet_wrap(~name, ncol = 3, scales = 'free') +
labs(title = 'Songs characteristics',x = '', y = '') +
theme_bw() +
theme(axis.text.x = element_text(angle = 50, hjust = 1),axis.text.y = element_blank(), aspect.ratio = 0.30)
temp <- names(audio_features)[c(5, 6, 8, 10:15)]
genre_analysis <- audio_features %>%
select(c("genre", temp)) %>%
pivot_longer(cols = temp, values_transform = as.numeric)
# Creazione grafico
genre_analysis %>%
ggplot(aes(x = value)) +
geom_density(aes(color = genre)) +
facet_wrap(~name, ncol = 3, scales = 'free') +
labs(title = 'Songs characteristics',x = '', y = '') +
theme_bw() +
theme(axis.text.x = element_text(angle = 50, hjust = 1),axis.text.y = element_blank(), aspect.ratio = 0.30)
genre_analysis %>%
ggplot(aes(x = value)) +
geom_density(aes(color = genre)) +
facet_wrap(~name, ncol = 3, scales = 'free') +
labs(title = 'Genre Characteristic',x = '', y = '') +
theme_bw() +
theme(axis.text.x = element_text(angle = 50, hjust = 1),axis.text.y = element_blank(), aspect.ratio = 0.30)
# Creazione grafico
genre_analysis %>%
ggplot(aes(x = value)) +
geom_density(aes(color = genre)) +
facet_wrap(~name, ncol = 3, scales = 'free') +
labs(title = 'Genre Characteristic',x = '', y = '') +
theme_bw() +
theme(axis.text.x = element_text(angle = 50, hjust = 1),axis.text.y = element_blank())
View(top_200_song)
View(all_genre_top_artist)
View(all_genre_top_artist[[8]][[1]])
View((all_genre_top_artist[[8]][[1]])[[13]][[1]])
top_10_song <- all_genre_top_artist %>%
select(genre, name, top.song)
View(top_10_song)
top_10_song <- all_genre_top_artist %>%
select(genre, name, top.song) %>%
colnames()[2] <- "artist.name"
colnames(top_10_song)[2] <- "artist.name"
top_10_song <- unnest(top_10_song, top.song)
top_10_song <- top_10_song %>%
arrange(desc)
top_10_song <- all_genre_top_artist %>%
select(genre, name, top.song)
colnames(top_10_song)[2] <- "artist.name"
top_10_song <- unnest(top_10_song, top.song)
top_10_song <- top_10_song %>%
arrange(desc(popularity)) %>%
head(10)
top_10_song[!duplicated(top_10_song$name)]
top_10_song[!duplicated(top_10_song$name), ]
top_10_song <- top_10_song %>%
head(10)
top_10_song[!duplicated(top_10_song$name), ]
top_10_song <- all_genre_top_artist %>%
select(genre, name, top.song)
colnames(top_10_song)[2] <- "artist.name"
top_10_song <- unnest(top_10_song, top.song)
top_10_song <- top_10_song %>%
arrange(desc(popularity))
top_10_song <- top_10_song[!duplicated(top_10_song$name), ]
top_10_song <- top_10_song %>%
head(10)
# Creazione nuova colonna duration_s (conversione della colonna duration_ms in secondi)
top_10_song <- top_10_song %>%
mutate(duration_s = map(duration_ms, function(x){x/1000}))
# Assegnazione tipo numerico alla nuova colonna duration_s
top_10_song$duration_s <- as.numeric(top_10_song$duration_s)
top_10_song <- top_10_song %>%
head(10) %>%
select(-id, -track_number, -album.id, -album.name, -album.total_tracks, -album.type)
View(top_10_song[[9]][[1]])
top_10_song <- all_genre_top_artist %>%
select(genre, name, top.song)
colnames(top_10_song)[2] <- "artist.name"
top_10_song <- unnest(top_10_song, top.song)
top_10_song <- top_10_song %>%
arrange(desc(popularity))
top_10_song <- top_10_song[!duplicated(top_10_song$name), ]
top_10_song <- top_10_song %>%
head(10) %>%
select(-id, -track_number, -album.id, -album.name, -album.total_tracks, -album.type)
top_10_song <- unnest(top_10_song, song.features)
# Creazione nuova colonna duration_s (conversione della colonna duration_ms in secondi)
top_10_song <- top_10_song %>%
mutate(duration_s = map(duration_ms, function(x){x/1000}))
# Assegnazione tipo numerico alla nuova colonna duration_s
top_10_song$duration_s <- as.numeric(top_10_song$duration_s)
# Data-frame
top_10_song <- all_genre_top_artist %>%
select(genre, name, top.song)
colnames(top_10_song)[2] <- "artist.name"
top_10_song <- unnest(top_10_song, top.song)
top_10_song <- top_10_song %>%
arrange(desc(popularity))
top_10_song <- top_10_song[!duplicated(top_10_song$name), ]
top_10_song <- top_10_song %>%
head(10) %>%
select(-id, -track_number, -album.id, -album.name, -album.total_tracks, -album.type, -duration_ms)
top_10_song <- unnest(top_10_song, song.features)
# Creazione nuova colonna duration_s (conversione della colonna duration_ms in secondi)
top_10_song <- top_10_song %>%
mutate(duration_s = map(duration_ms, function(x){x/1000}))
# Assegnazione tipo numerico alla nuova colonna duration_s
top_10_song$duration_s <- as.numeric(top_10_song$duration_s)
ggplot(data = top_10_song, mapping = aes(x = name, y = acousticness, fill = genre)) +
geom_bar(aes(color = genre))
ggplot(data = top_10_song, mapping = aes(y = acousticness, fill = genre)) +
geom_bar(aes(color = genre))
ggplot(data = top_10_song, mapping = aes(x = name, y = acousticness, fill = genre, shape = genre)) +
geom_col() +
theme_bw() +
theme(axis.text.x = element_text(angle = 25, hjust = 0.5)) +
ggtitle('Acousticness', subtitle = 'For top 10 songs on Spotify')
ggplot(data = top_10_song, mapping = aes(x = 1:10, y = acousticness, fill = genre, shape = genre)) +
geom_col() +
theme_bw() +
theme(axis.text.x = element_text(angle = 25, hjust = 0.5)) +
ggtitle('Acousticness', subtitle = 'For top 10 songs on Spotify')
ggplot(data = top_10_song, mapping = aes(x = name, y = acousticness, fill = genre, shape = genre)) +
geom_col() +
theme_bw() +
theme(axis.text.x = element_text(angle = 25, hjust = 0.5)) +
ggtitle('Acousticness', subtitle = 'For top 10 songs on Spotify')
ggplot(data = top_10_song, mapping = aes(x = name, y = loudness, fill = genre, shape = genre)) +
geom_col() +
theme_bw() +
theme(axis.text.x = element_text(angle = 25, hjust = 0.5)) +
ggtitle('Acousticness', subtitle = 'For top 10 songs on Spotify')
ggplot(data = top_10_song, mapping = aes(x = name, y = valence, fill = genre, shape = genre)) +
geom_col() +
theme_bw() +
theme(axis.text.x = element_text(angle = 25, hjust = 0.5)) +
ggtitle('Acousticness', subtitle = 'For top 10 songs on Spotify')
ggplot(data = top_10_song, mapping = aes(x = name, y = danceability, fill = genre, shape = genre)) +
geom_col() +
theme_bw() +
theme(axis.text.x = element_text(angle = 25, hjust = 0.5)) +
ggtitle('Acousticness', subtitle = 'For top 10 songs on Spotify')
top_10_artist <- all_genre_top_artist %>%
arrange(desc(popularity)) %>%
head(10)
View(top_10_artist)
top_10_artist %>%
count(genre) %>%
ggplot() +
geom_col(aes(x = genre, y = count(genre), fill = genre)) +
coord_polar() +
theme_bw() +
theme(axis.text.x = element_text(hjust = 1), axis.text.y = element_text(hjust = 1)) +
ggtitle("Genre of most popular song") +
xlab("Song Genre") +
ylab("Number of songs")
top_10_artist %>%
count(genre) %>%
ggplot() +
geom_col(aes(x = genre, y = n, fill = genre)) +
coord_polar() +
theme_bw() +
theme(axis.text.x = element_text(hjust = 1), axis.text.y = element_text(hjust = 1)) +
ggtitle("Genre of most popular song") +
xlab("Song Genre") +
ylab("Number of songs")
top_10_artist %>%
count(genre) %>%
ggplot() +
geom_col(aes(x = genre, y = n, fill = genre)) +
coord_polar() +
theme_bw() +
theme(axis.text.x = element_text(hjust = 1), axis.text.y = element_text(hjust = 1)) +
ggtitle("Genre of most popular song") +
xlab("Artist genre") +
ylab("Number of time that comapre a genre")
install.packages("prettydoc")
